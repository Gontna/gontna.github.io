[{"content":" 1 2 3 4 np.random.seed(1) torch.manual_seed(1) torch.cuda.manual_seed_all(1) torch.backends.cudnn.deterministic = True 经常在一些开源项目中看到上述代码。这段代码是用来设置随机数种子和确保在使用GPU加速时结果的确定性。\n在使用GPU加速时，由于并行计算的特性，微小的差异可能会导致不同的计算顺序和结果。如果我们在每次运行时都设置相同的随机数种子，那么无论是在CPU还是GPU上运行，随机数生成器的起始状态都是相同的，从而可以保证在相同的输入条件下得到相同的输出结果，确保了结果的确定性\n为什么GPU加速时结果会有不确定性 在使用GPU加速时，结果可能会出现不确定性的原因主要有两个：\n并行计算：在使用GPU进行并行计算时，由于计算单元的数量较多，计算的顺序和时序可能会出现微小的差异，这可能会导致结果的不确定性。\n硬件和驱动差异：不同的GPU硬件和驱动程序可能会导致微小的数值计算差异，尤其是在涉及浮点数运算时，这种差异可能会在结果中产生微小的变化。\n这段代码怎样确保实验结果的确定性? 首先三次随机数种子设置\n1 np.random.seed(1) Numpy中用于设置随机数种子的函数\n1 torch.manual_seed(1) Pytorch中用于设置CPU随机数种子的函数\n在深度学习中,随机数通常用于初始化模型参数、数据集的划分以及一些随机性操作(如Dropout等),如果不设置随机数种子,每次运行时随机数生成器的初始状态都是不同的,这回导致每次运行获得的随机数和结果都不同\n1 torch.cuda.manual_seed_all(1) PyTorch中用于设置GPU随机数种子的函数。这个函数会设置所有可用的GPU设备的随机数种子，以确保在使用GPU加速时结果的确定性\n1 torch.backends.cudnn.deterministic = True torch.backends.cudnn.deterministic = True是PyTorch中用于设置cuDNN（CUDA深度神经网络库）的确定性模式的语句。cuDNN是NVIDIA专门为深度学习框架提供的GPU加速库，用于加速卷积神经网络等深度学习计算。\n当设置torch.backends.cudnn.deterministic = True时，cuDNN将会使用确定性的算法来进行计算，这意味着在相同的输入条件下，每次运行时都会得到相同的输出结果。这对于实验的可复现性非常重要\n","permalink":"https://gontna.github.io/zh/posts/deeplearning/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%A7%8D%E5%AD%90%E4%B8%8Egpu%E5%8A%A0%E9%80%9F%E7%A1%AE%E5%AE%9A%E6%80%A7/","summary":"pytorch随机数种子加速","title":"[pytorch] 随机数种子与GPU加速结果的确定性"}]